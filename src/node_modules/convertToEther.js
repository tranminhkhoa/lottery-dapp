const ethers = require('ethers')
const bigNumber = require('bignumber.js')

module.exports = convertToEther

function convertToEther (currency, amount) {
  var amount = getAmount(currency, amount)
  amount = ethers.utils.formatEther(amount)
  return ethers.utils.parseEther(amount)
}

function formatAmount (exponent, amount) {
  var base = new bigNumber(1000)
  return base.exponentiatedBy(exponent).multipliedBy(amount).toFormat().split(',').join('')
}

function getAmount (currency, amount) {
  var base = new bigNumber(1000)
  if (currency === 't-ether') return formatAmount(10, amount)
  if (currency === 'g-ether') return formatAmount(9, amount)
  if (currency === 'm-ether') return formatAmount(8, amount)
  if (currency === 'k-ether') return formatAmount(7, amount)
  if (currency === 'ether')   return formatAmount(6, amount)
  if (currency === 'milli')   return formatAmount(5, amount)
  if (currency === 'micro')   return formatAmount(4, amount)
  if (currency === 'g-wei')   return formatAmount(3, amount)
  if (currency === 'm-wei')   return formatAmount(2, amount)
  if (currency === 'k-wei')   return formatAmount(1, amount)
  if (currency === 'wei')     return amount
}
