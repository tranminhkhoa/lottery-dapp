const bel = require("bel")
const colors = require('theme')
const csjs = require("csjs-inject")
const ethers = require('ethers')
var css

module.exports = inputPayable

function inputPayable (label) {

  return bel`
    <div class=${css.inputContainer}>
      <div class=${css.title} title="data type: ${label}">value</div>
      <div class=${css.inputArea}>
        <input class=${css.input} placeholder="999" oninput=${validate}>
        ${currencySelector()}
      </div>
      <div class=${css.ethIcon} title="Select amount you want to send with this function!"><i class="fab fa-ethereum"></i></div>
    </div>`
}

  function validate (e) {
    // @TODO
  }

function currencySelector () {
  var button = bel`
    <select class=${css.currency}>
      <option value="wei">wei</option>
      <option value="k-wei">k-wei</option>
      <option value="m-wei">m-wei</option>
      <option value="g-wei">g-wei</option>
      <option value="micro">micro</option>
      <option value="milli">milli</option>
      <option value="ether">ether</option>
      <option value="k-ether">k-ether</option>
      <option value="m-ether">m-ether</option>
      <option value="g-ether">g-ether</option>
      <option value="t-ether">t-ether</option>
    </select>`
  return button
}

css = csjs`
.inputContainer {
  display: flex;
  align-items: center;
  margin: 15px 0 15px 0;
}
.title {
  justify-content: center;
  color: ${colors.slateGrey};
  font-size: 0.9rem;
  display: flex;
  min-width: 200px;
}
.inputArea {
  display: flex;
  align-items: center;
  max-width: 300px;
}
.input {
  width: 194px;
  background-color: ${colors.darkSmoke};
  border-radius: 0.2em;
  color: ${colors.whiteSmoke};
  border: 1px solid ${colors.slateGrey};
  text-align: center;
  font-size: 0.9rem;
  padding: 5px;
  margin-right: 5px;
}
.currency {
  width: 88px;
  border-radius: 0.2em;
  border: 1px solid ${colors.slateGrey};
  padding: 5px 7px;
  color: ${colors.slateGrey};
  background-color: ${colors.darkSmoke};
}
.ethIcon {
  color: ${colors.orange};
  font-size: 1.2rem;
  display: flex;
  align-self: center;
  padding-left: 10px;
}
`
