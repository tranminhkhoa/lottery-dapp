const bel = require('bel')

module.exports = logbook

function logbook () {
  let el = bel`
    <div class=${css.logbook}></div>
  `
}

// @TODO: CONCEPT for components architecture

/******************************************************************************
  app.js
******************************************************************************/
var compiler = require('solc-js')
var storage = require('data-storage')
var template = require('smartcontract-template')
var instance = require('smartcontract-instance')

var metadata = compiler('contract.sol')
var t = template(metadata)

var receipt = storage.get('instance/1.json')
var i = instance(receipt)

document.body.appendChild(t)
document.body.appendChild(i)

/******************************************************************************
  src/node_modules/template.js
******************************************************************************/
var sca = require('smartcontract-app')

module.exports = template

function template (contract_metadata, cb) {
  var el = sca(contract_metadata, (msg, log) => {
    var { method, args } = msg
    if (method === 'deploy') {
      var counter = storage.get('instance/').length
      var json = web3.deploy(contract_metadata)
      storage.set(`instance/${counter}.json`, json)
    }
    else if (method === 'getAllRequests') log('please deploy first')
  })
  return el
}

/******************************************************************************
  src/node_modules/instance.js
******************************************************************************/
var sca = require('smartcontract-app')

module.exports = instance

function instance (instance_metadata, cb) {
  var contract = web3.contract(instance_metadata)
  var el = sca(instance_metadata, (msg, log) => {
     var { method, args } = msg
    if (method === 'getAllRequests') {
      var response = await contract.getAllRequests(args)
      log(response)
    }
  })
}

/******************************************************************************
  src/smartcontract-app.js
******************************************************************************/
var logbook = require('logbook')

module.exports = (metadata, request) => {
  var log = logbook()
  var el = bel`<div>
    <label>getAllRequests</label>
    <input type="number"></input>
    <button onclick=${onclick}> send </button>
    ${log}
  </div>`

  return el
  function onclick (event) {
    request({ method: 'getAllRequests', args: [] }, msg => {
      var item = bel`<div>${msg}</div>`
      log.appendChild(item)
    })
  }
}
