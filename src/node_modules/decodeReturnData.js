const ethers = require('ethers')

module.exports = decodeReturnData

function decodeReturnData (txReturn, txTypes) {
  var result
  if (Array.isArray(txReturn)) {  // recursive case
    result = txReturn.map((x, i) => decodeReturnData(x, getTypes(txTypes, i)))
    return result
  } else { // atomic case
    result = decode(txReturn, getTypes(txTypes, 0))
    return result
  }
}

function decode (txReturn, txType) {
  var type = txType.type
  if (type.includes('int')) return txReturn.toString()
  else return txReturn
}

function getTypes(types, i) {
  if (types.components) types = types.components
  else if (Array.isArray(types)) {
    if (types[i].type) types = types[i]
  }
  else types = types
  return types
}
